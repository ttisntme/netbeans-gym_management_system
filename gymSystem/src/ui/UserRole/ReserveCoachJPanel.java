/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.UserRole;

import ui.StoreAdminRole.*;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.CoachEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.EnterpriseDirectory;
import Business.Network.Network;
import Business.Organization.CoachStaffOrganization;
import Business.Organization.Organization;
import Business.Organization.SupplierOrganization;
import Business.Organization.UserOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.Store2SupplierWorkRequest;
import Business.WorkQueue.User2CoachWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ReserveCoachJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    
    private Enterprise enterprise;
    private UserAccount userAccount;
    private UserOrganization organization;
    private EcoSystem system;
    
    private Organization targetOg;
    
    /**
     * Creates new form RequestLabTestJPanel
     */
    public ReserveCoachJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount userAccount, Organization organization, EcoSystem system) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.organization = (UserOrganization) organization;
        this.system = system;
        
        for(Network network : system.getNetworkList()){
            for(Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()){  
                for(Organization og : e.getOrganizationDirectory().getOrganizationList()) {
                    if(og instanceof CoachStaffOrganization){
                        targetOg = og;
                        break;
                    }
                }
            }
        }
        
        populateNetworkTable(targetOg);
        populateRequestTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRequest = new javax.swing.JButton();
        messageJTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        networkJTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        refreshTestJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnRequest.setBackground(new java.awt.Color(204, 204, 255));
        btnRequest.setFont(new java.awt.Font("Monaco", 1, 20)); // NOI18N
        btnRequest.setForeground(new java.awt.Color(255, 153, 0));
        btnRequest.setText("Make Reservation");
        btnRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestActionPerformed(evt);
            }
        });
        add(btnRequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 200, 220, 60));

        messageJTextField.setForeground(new java.awt.Color(255, 153, 0));
        add(messageJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 140, 280, 40));

        backJButton.setBackground(new java.awt.Color(204, 204, 255));
        backJButton.setFont(new java.awt.Font("Monaco", 1, 20)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 153, 0));
        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, 190, 40));

        enterpriseLabel.setFont(new java.awt.Font("Monaco", 1, 24)); // NOI18N
        enterpriseLabel.setForeground(new java.awt.Color(0, 204, 204));
        enterpriseLabel.setText("User");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, 70, 40));

        networkJTable.setFont(new java.awt.Font("Monaco", 1, 16)); // NOI18N
        networkJTable.setForeground(new java.awt.Color(255, 153, 0));
        networkJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "CoachName", "Special", "Gender", "Age"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(networkJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 400, 180));

        workRequestJTable.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        workRequestJTable.setForeground(new java.awt.Color(255, 153, 0));
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Receiver", "Special", "Status", "Date", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(workRequestJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 720, 180));

        refreshTestJButton.setBackground(new java.awt.Color(204, 204, 255));
        refreshTestJButton.setFont(new java.awt.Font("Monaco", 1, 20)); // NOI18N
        refreshTestJButton.setForeground(new java.awt.Color(255, 153, 0));
        refreshTestJButton.setText("Refresh");
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });
        add(refreshTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 530, 170, 40));

        jLabel2.setFont(new java.awt.Font("Monaco", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 204));
        jLabel2.setText("Coach List:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 170, 20));

        jLabel3.setFont(new java.awt.Font("Monaco", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 204));
        jLabel3.setText("Expected Time:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 100, 170, 20));
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    private void btnRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestActionPerformed
        
        int selectedRow = networkJTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this,"Please select a coach!");
            return;
        }
        
        Employee coach = (Employee)networkJTable.getValueAt(selectedRow, 0);
        
        if(messageJTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(this,"Please input date!");
            return;
        }
        String date = messageJTextField.getText();
        
        User2CoachWorkRequest request = new User2CoachWorkRequest(); // no abstract class
        request.setSender(userAccount);
        request.setStatus("Sent");
        request.setDate(date);
        request.setCoachName(coach.getName());
        request.setSpecial(coach.getSpecial());
        
        UserAccount targetUA = null;
        
        for(UserAccount ua : targetOg.getUserAccountDirectory().getUserAccountList()) {
            if(ua.getEmployee().getName().equals(coach.getName())) {
                targetUA = ua;
                break;
            } 
        }
        if(targetUA == null) {
            JOptionPane.showMessageDialog(this,"Sorry! This coach is not available now!");
            return;
        }
        request.setReceiver(targetUA);

        // add workrequest in current useraccount and target organization
        userAccount.getWorkQueue().getWorkRequestList().add(request);
        targetOg.getWorkQueue().getWorkRequestList().add(request);
        JOptionPane.showMessageDialog(this,"Reservation created!");
        populateRequestTable();
        
    }//GEN-LAST:event_btnRequestActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_backJButtonActionPerformed

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed

        populateRequestTable();

    }//GEN-LAST:event_refreshTestJButtonActionPerformed
    
    private void populateNetworkTable(Organization og) {
        DefaultTableModel model = (DefaultTableModel) networkJTable.getModel();

        model.setRowCount(0);
        for (Employee em : og.getEmployeeDirectory().getEmployeeList()) {
            Object[] row = new Object[4];
            row[0] = em;
            row[1] = em.getSpecial();
            row[2] = em.getGender();
            row[3] = em.getAge();
            model.addRow(row);
        }
    }
    
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            if(request instanceof User2CoachWorkRequest) {
                Object[] row = new Object[5];
                row[1] = ((User2CoachWorkRequest) request).getSpecial();
                row[0] = request.getReceiver();
                row[2] = request.getStatus();
                row[3] = ((User2CoachWorkRequest) request).getDate();
                String result = ((User2CoachWorkRequest)request).getResult();
                row[4] = result == null ? "Waiting" : result;

                model.addRow(row);
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnRequest;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField messageJTextField;
    private javax.swing.JTable networkJTable;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
