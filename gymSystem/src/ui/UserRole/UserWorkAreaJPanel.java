/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.UserRole;

import Business.EcoSystem;
import Business.Enterprise.CafeEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.EnterpriseDirectory;
import Business.Enterprise.StoreEnterprise;
import Business.Network.Network;
import Business.Organization.UserOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CafeOrder;
import Business.WorkQueue.StoreOrder;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class UserWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private ArrayList<CafeEnterprise> cafeList; 
    private ArrayList<StoreEnterprise> storeList; 
    private EcoSystem business; 
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public UserWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, UserOrganization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.business = business; 
        cafeList = new ArrayList<CafeEnterprise>();
        for(Network network : business.getNetworkList()){
            EnterpriseDirectory enterpriseDirectory = network.getEnterpriseDirectory(); 
            for(Enterprise e : enterpriseDirectory.getEnterpriseList()){   
                if(e instanceof CafeEnterprise){
                    cafeList.add((CafeEnterprise) e);
                }
                
            }
        }
        storeList = new ArrayList<StoreEnterprise>();
        for(Network network : business.getNetworkList()){
            EnterpriseDirectory enterpriseDirectory = network.getEnterpriseDirectory(); 
            for(Enterprise e : enterpriseDirectory.getEnterpriseList()){   
                if(e instanceof StoreEnterprise){
                    storeList.add((StoreEnterprise) e);
                }
                
            }
        }
        valueLabel.setText(enterprise.getName());
        cmbSelection1.removeAllItems();
        cmbSelection1.addItem("CANCELED");
        cmbSelection1.addItem("CREATED");
        cmbSelection1.addItem("CONFIRMED");
        cmbSelection1.addItem("COMPLETED");     
        populateOrderHistoryTable();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enterpriseLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        btnManageOrder = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TblOrderHistory = new javax.swing.JTable();
        refreshTestJButton = new javax.swing.JButton();
        cmbSelection1 = new javax.swing.JComboBox<>();
        valueLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TblOrderHistory1 = new javax.swing.JTable();
        btnManageOrder1 = new javax.swing.JButton();
        btnReserveCoach = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        enterpriseLabel.setFont(new java.awt.Font("Monaco", 1, 24)); // NOI18N
        enterpriseLabel.setForeground(new java.awt.Color(0, 204, 204));
        enterpriseLabel.setText("EnterPrise:");

        statusLabel.setFont(new java.awt.Font("Monaco", 1, 20)); // NOI18N
        statusLabel.setForeground(new java.awt.Color(0, 204, 204));
        statusLabel.setText("Status");

        btnManageOrder.setBackground(new java.awt.Color(204, 204, 255));
        btnManageOrder.setFont(new java.awt.Font("Monaco", 1, 20)); // NOI18N
        btnManageOrder.setForeground(new java.awt.Color(255, 153, 0));
        btnManageOrder.setText("Manage Store Order");
        btnManageOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageOrderActionPerformed(evt);
            }
        });

        TblOrderHistory.setFont(new java.awt.Font("Monaco", 1, 12)); // NOI18N
        TblOrderHistory.setForeground(new java.awt.Color(255, 153, 0));
        TblOrderHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Ordered Items", "Cafe", "Request Date", "Status", "Message"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TblOrderHistory);
        if (TblOrderHistory.getColumnModel().getColumnCount() > 0) {
            TblOrderHistory.getColumnModel().getColumn(1).setMaxWidth(50);
        }

        refreshTestJButton.setBackground(new java.awt.Color(204, 204, 255));
        refreshTestJButton.setFont(new java.awt.Font("Monaco", 1, 20)); // NOI18N
        refreshTestJButton.setForeground(new java.awt.Color(255, 153, 0));
        refreshTestJButton.setText("Refresh");
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });

        cmbSelection1.setBackground(new java.awt.Color(204, 204, 255));
        cmbSelection1.setFont(new java.awt.Font("Monaco", 1, 20)); // NOI18N
        cmbSelection1.setForeground(new java.awt.Color(255, 153, 0));
        cmbSelection1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbSelection1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSelection1ActionPerformed(evt);
            }
        });

        valueLabel.setFont(new java.awt.Font("Monaco", 1, 24)); // NOI18N
        valueLabel.setForeground(new java.awt.Color(255, 153, 0));
        valueLabel.setText("<value>");

        TblOrderHistory1.setFont(new java.awt.Font("Monaco", 1, 12)); // NOI18N
        TblOrderHistory1.setForeground(new java.awt.Color(255, 153, 0));
        TblOrderHistory1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Ordered Products", "Store", "Request Date", "Status", "Message"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TblOrderHistory1);
        if (TblOrderHistory1.getColumnModel().getColumnCount() > 0) {
            TblOrderHistory1.getColumnModel().getColumn(1).setMaxWidth(50);
        }

        btnManageOrder1.setBackground(new java.awt.Color(204, 204, 255));
        btnManageOrder1.setFont(new java.awt.Font("Monaco", 1, 20)); // NOI18N
        btnManageOrder1.setForeground(new java.awt.Color(255, 153, 0));
        btnManageOrder1.setText("Manage Cafe Order");
        btnManageOrder1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageOrder1ActionPerformed(evt);
            }
        });

        btnReserveCoach.setBackground(new java.awt.Color(204, 204, 255));
        btnReserveCoach.setFont(new java.awt.Font("Monaco", 1, 20)); // NOI18N
        btnReserveCoach.setForeground(new java.awt.Color(255, 153, 0));
        btnReserveCoach.setText("Reserve Coach");
        btnReserveCoach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReserveCoachActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesss/4990_300.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnManageOrder, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnReserveCoach, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(enterpriseLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(valueLabel))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(statusLabel)
                                .addGap(18, 18, 18)
                                .addComponent(cmbSelection1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnManageOrder1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(refreshTestJButton)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 646, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(146, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSelection1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshTestJButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnManageOrder1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnManageOrder)
                .addGap(18, 18, 18)
                .addComponent(btnReserveCoach)
                .addContainerGap(127, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnManageOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageOrderActionPerformed
        // TODO add your handling code here:
        OrderProductJPanel mojp = new OrderProductJPanel(userProcessContainer, enterprise, storeList, userAccount); 
        userProcessContainer.add("ManageUserAccountJPanel",  mojp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnManageOrderActionPerformed
    void populateOrderHistoryTable(){
        DefaultTableModel model = (DefaultTableModel) TblOrderHistory.getModel();
        model.setRowCount(0);
        for(WorkRequest workRequest : userAccount.getWorkQueue().getWorkRequestList()){
            if(workRequest instanceof CafeOrder){
                Object[] row = new Object[5];
                CafeOrder order = (CafeOrder) workRequest;
                row[0] = order; 
                row[1] = order.getCafeEnterprise().getName(); 
                row[2] = order.getRequestDate().toString(); 
                row[3] = order.getStatus();
                row[4] = order.getMessage(); 
                model.addRow(row);
            }
        }
        model = (DefaultTableModel) TblOrderHistory1.getModel();
        model.setRowCount(0);
        for(WorkRequest workRequest : userAccount.getWorkQueue().getWorkRequestList()){
            if(workRequest instanceof StoreOrder){
                Object[] row = new Object[5];
                StoreOrder order = (StoreOrder) workRequest;
                row[0] = order; 
                row[1] = order.getStoreEnterprise().getName(); 
                row[2] = order.getRequestDate().toString(); 
                row[3] = order.getStatus();
                row[4] = order.getMessage(); 
                model.addRow(row);
            }
        }
    }
    private void btnManageOrder1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageOrder1ActionPerformed
        // TODO add your handling code here:
        CreateNewOrderPanel mojp = new CreateNewOrderPanel(userProcessContainer, enterprise, cafeList, userAccount); 
        userProcessContainer.add("ManageUserAccountJPanel",  mojp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnManageOrder1ActionPerformed

    private void btnReserveCoachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReserveCoachActionPerformed
        // TODO add your handling code here:
        ReserveCoachJPanel rcjp = new ReserveCoachJPanel(userProcessContainer, enterprise, userAccount, organization, business);
        userProcessContainer.add("rcjp", rcjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_btnReserveCoachActionPerformed

    private void cmbSelection1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSelection1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cmbSelection1ActionPerformed

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed
        String status = String.valueOf(cmbSelection1.getSelectedItem());
        DefaultTableModel model = (DefaultTableModel) TblOrderHistory.getModel();
        model.setRowCount(0);
        for(WorkRequest workRequest : userAccount.getWorkQueue().getWorkRequestList()){
            if(workRequest instanceof CafeOrder && workRequest.getStatus().equals(status)){
                Object[] row = new Object[5];
                CafeOrder order = (CafeOrder) workRequest;
                row[0] = order;
                row[1] = order.getCafeEnterprise().getName();
                row[2] = order.getRequestDate().toString();
                row[3] = order.getStatus();
                row[4] = order.getMessage();
                model.addRow(row);
            }
        }
    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TblOrderHistory;
    private javax.swing.JTable TblOrderHistory1;
    private javax.swing.JButton btnManageOrder;
    private javax.swing.JButton btnManageOrder1;
    private javax.swing.JButton btnReserveCoach;
    private javax.swing.JComboBox<String> cmbSelection1;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
