/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.CafeAdminRole;

import ui.UserRole.*;
import Business.Enterprise.Enterprise;
import Business.Organization.FoodItem;
import Business.Organization.FoodSupplierOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FoodOrder;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class OrderFromFoodSupplierJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private ArrayList<FoodSupplierOrganization> foodSuppliers; 
    private UserAccount userAccount;
    private FoodOrder tempOrder; 
    private FoodSupplierOrganization curSupplier; 
    /**
     * Creates new form RequestLabTestJPanel
     */
    public OrderFromFoodSupplierJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount userAccount) {
        initComponents();   
        this.userProcessContainer = userProcessContainer;
        foodSuppliers = new ArrayList<FoodSupplierOrganization>();
        for(Organization og: enterprise.getOrganizationDirectory().getOrganizationList()) {
            if(og instanceof FoodSupplierOrganization) {
               foodSuppliers.add((FoodSupplierOrganization) og); 
            }
        }
        this.userAccount = userAccount;
         populateSelectionCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGo = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        valueLabel = new javax.swing.JLabel();
        enterpriseLabel = new javax.swing.JLabel();
        cmbSelection = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrderItems = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMenuItems = new javax.swing.JTable();
        btnAddToOrder1 = new javax.swing.JButton();
        enterpriseLabel1 = new javax.swing.JLabel();
        btnCreateOrder1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnGo.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        btnGo.setForeground(new java.awt.Color(255, 153, 0));
        btnGo.setText("Go");
        btnGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoActionPerformed(evt);
            }
        });
        add(btnGo, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 40, -1, -1));

        backJButton.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 153, 0));
        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, -1, -1));

        valueLabel.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        valueLabel.setForeground(new java.awt.Color(255, 153, 0));
        valueLabel.setText("Select Cafe");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, 110, -1));

        enterpriseLabel.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        enterpriseLabel.setForeground(new java.awt.Color(0, 204, 255));
        enterpriseLabel.setText("Price Total:");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 330, 120, 20));

        cmbSelection.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        cmbSelection.setForeground(new java.awt.Color(0, 204, 255));
        cmbSelection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSelectionActionPerformed(evt);
            }
        });
        add(cmbSelection, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, 110, -1));

        tblOrderItems.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        tblOrderItems.setForeground(new java.awt.Color(0, 204, 255));
        tblOrderItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Menu Item", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrderItems);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 90, 180, 220));

        tblMenuItems.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        tblMenuItems.setForeground(new java.awt.Color(0, 204, 255));
        tblMenuItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Menu Item", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblMenuItems);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 170, 220));

        btnAddToOrder1.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        btnAddToOrder1.setForeground(new java.awt.Color(255, 153, 0));
        btnAddToOrder1.setText("Add to Order");
        btnAddToOrder1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToOrder1ActionPerformed(evt);
            }
        });
        add(btnAddToOrder1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 370, -1, -1));

        enterpriseLabel1.setFont(new java.awt.Font("Monaco", 1, 18)); // NOI18N
        enterpriseLabel1.setForeground(new java.awt.Color(0, 204, 255));
        enterpriseLabel1.setText("Create Order:");
        add(enterpriseLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 170, 30));

        btnCreateOrder1.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        btnCreateOrder1.setForeground(new java.awt.Color(255, 153, 0));
        btnCreateOrder1.setText("Create Order");
        btnCreateOrder1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateOrder1ActionPerformed(evt);
            }
        });
        add(btnCreateOrder1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 370, -1, -1));
    }// </editor-fold>//GEN-END:initComponents
    private void populateSelectionCombo(){
         cmbSelection.removeAllItems();
         for(FoodSupplierOrganization foodSupplierOrganization : foodSuppliers){
             cmbSelection.addItem(foodSupplierOrganization.getName()); 
         }
    }
    private void populateRestaurantMenu(FoodSupplierOrganization foodSupplierOrganization){
        DefaultTableModel model = (DefaultTableModel) tblMenuItems.getModel();
        model.setRowCount(0);
        for(FoodItem foodItem : foodSupplierOrganization.getFoodItems()){
            Object[] row = new Object[2]; 
            row[0] = foodItem; 
            row[1] = foodItem.getPrice(); 
            model.addRow(row);
        }
    }
    private void populateOrderItems(){
        DefaultTableModel model = (DefaultTableModel) tblOrderItems.getModel(); 
        model.setRowCount(0); 
        for(FoodItem foodItem : tempOrder.getFoodItems()){
            Object[] row = new Object[2]; 
            row[0] = foodItem; 
            row[1] = foodItem.getPrice(); 
            model.addRow(row);
        }
    }
    private void btnGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoActionPerformed
        String name = String.valueOf(cmbSelection.getSelectedItem());
        FoodSupplierOrganization foodSupplier = null;  
        DefaultTableModel model = (DefaultTableModel) tblOrderItems.getModel(); 
        model.setRowCount(0); 
        for (FoodSupplierOrganization fso : foodSuppliers)
        {
            if(fso.getName().equals(name)){
                foodSupplier = fso;
                break;
            }
        }  
        if(foodSupplier != null){
            populateRestaurantMenu(foodSupplier);
            this.curSupplier = foodSupplier;
        }
        tempOrder = new FoodOrder(foodSupplier, new ArrayList<FoodItem>());
        
    }//GEN-LAST:event_btnGoActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ViewFoodOrdersJPanel dwjp = (ViewFoodOrdersJPanel) component;
        dwjp.populateOrderHistoryTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_backJButtonActionPerformed

    private void cmbSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSelectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSelectionActionPerformed

    private void btnAddToOrder1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToOrder1ActionPerformed
        // TODO add your handling code here:
         int row = tblMenuItems.getSelectedRow();
       if(row < 0)
        {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        FoodItem foodItem = (FoodItem) tblMenuItems.getValueAt(row, 0);
        tempOrder.getFoodItems().add(foodItem);
        double sum = 0;
        for(FoodItem fi : tempOrder.getFoodItems()){
            sum += fi.getPrice();
        }
        enterpriseLabel.setText("Price Total: " + sum);
        populateOrderItems();
    }//GEN-LAST:event_btnAddToOrder1ActionPerformed

    private void btnCreateOrder1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateOrder1ActionPerformed
        // TODO add your handling code here:
        tempOrder.setRequestDate(new Date(System.currentTimeMillis()));
        tempOrder.setStatus("CREATED");
        tempOrder.setMessage("PROCESSING");
        userAccount.getWorkQueue().addWorkRequest(tempOrder);
        if(curSupplier.getFoodOrders() == null){
            curSupplier.setFoodOrders(new ArrayList<FoodOrder>());
        }
        ArrayList<FoodOrder> orderList = curSupplier.getFoodOrders();
        orderList.add(tempOrder); 
        curSupplier.setFoodOrders(orderList);
        JOptionPane.showMessageDialog(null, "Food order has been created, please wait for the response from Food Supplier.", "Information", JOptionPane.INFORMATION_MESSAGE);
        DefaultTableModel model = (DefaultTableModel) tblOrderItems.getModel(); 
        model.setRowCount(0);
        model = (DefaultTableModel) tblMenuItems.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_btnCreateOrder1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnAddToOrder1;
    private javax.swing.JButton btnCreateOrder1;
    private javax.swing.JButton btnGo;
    private javax.swing.JComboBox<String> cmbSelection;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel enterpriseLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblMenuItems;
    private javax.swing.JTable tblOrderItems;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
