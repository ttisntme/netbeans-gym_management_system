/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.CafeAdminRole;

import ui.UserRole.*;
import Business.EcoSystem;
import Business.Enterprise.CafeEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.EnterpriseDirectory;
import Business.Enterprise.StoreEnterprise;
import Business.Network.Network;
import Business.Organization.FoodSupplierOrganization;
import Business.Organization.Organization;
import Business.Organization.UserOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CafeOrder;
import Business.WorkQueue.FoodOrder;
import Business.WorkQueue.StoreOrder;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ViewFoodOrdersJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private ArrayList<FoodSupplierOrganization> foodSupplierOrganizationList; 
    private EcoSystem business; 
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public ViewFoodOrdersJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, EcoSystem business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.business = business; 
   
        foodSupplierOrganizationList = new ArrayList<FoodSupplierOrganization>();
        for(Organization og: enterprise.getOrganizationDirectory().getOrganizationList()) {
            if(og instanceof FoodSupplierOrganization) {
               foodSupplierOrganizationList.add((FoodSupplierOrganization) og); 
            }
        }
        valueLabel.setText(enterprise.getName());
        cmbSelection1.removeAllItems();
        cmbSelection1.addItem("CANCELED");
        cmbSelection1.addItem("CREATED");
        cmbSelection1.addItem("CONFIRMED");
        cmbSelection1.addItem("COMPLETED");     
        populateOrderHistoryTable();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enterpriseLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TblOrderHistory = new javax.swing.JTable();
        refreshTestJButton = new javax.swing.JButton();
        cmbSelection1 = new javax.swing.JComboBox<>();
        valueLabel = new javax.swing.JLabel();
        btnManageOrder1 = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        enterpriseLabel.setFont(new java.awt.Font("Monaco", 1, 18)); // NOI18N
        enterpriseLabel.setForeground(new java.awt.Color(0, 204, 255));
        enterpriseLabel.setText("EnterPrise :");

        statusLabel.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        statusLabel.setForeground(new java.awt.Color(0, 204, 255));
        statusLabel.setText("Status");

        TblOrderHistory.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        TblOrderHistory.setForeground(new java.awt.Color(0, 204, 255));
        TblOrderHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Ordered Items", "Food Supplier", "Request Date", "Status", "Message"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TblOrderHistory);

        refreshTestJButton.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        refreshTestJButton.setForeground(new java.awt.Color(255, 153, 0));
        refreshTestJButton.setText("Refresh");
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });

        cmbSelection1.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        cmbSelection1.setForeground(new java.awt.Color(255, 153, 0));
        cmbSelection1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbSelection1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSelection1ActionPerformed(evt);
            }
        });

        valueLabel.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        valueLabel.setForeground(new java.awt.Color(255, 153, 0));
        valueLabel.setText("<value>");

        btnManageOrder1.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        btnManageOrder1.setForeground(new java.awt.Color(255, 153, 0));
        btnManageOrder1.setText("Create Food Order");
        btnManageOrder1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageOrder1ActionPerformed(evt);
            }
        });

        backJButton.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 153, 0));
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(btnManageOrder1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backJButton)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(enterpriseLabel)
                                .addGap(13, 13, 13)
                                .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(99, 99, 99)
                                .addComponent(statusLabel)
                                .addGap(18, 18, 18)
                                .addComponent(cmbSelection1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(refreshTestJButton))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 811, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbSelection1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(refreshTestJButton)))
                .addGap(53, 53, 53)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(btnManageOrder1)
                .addGap(77, 77, 77)
                .addComponent(backJButton)
                .addContainerGap(137, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    void populateOrderHistoryTable(){
        DefaultTableModel model = (DefaultTableModel) TblOrderHistory.getModel();
        model.setRowCount(0);
        for(WorkRequest workRequest : userAccount.getWorkQueue().getWorkRequestList()){
            if(workRequest instanceof FoodOrder){
                Object[] row = new Object[5];
                FoodOrder order = (FoodOrder) workRequest;
                row[0] = order; 
                row[1] = order.getFoodSupplierOrganization().getName(); 
                row[2] = order.getRequestDate().toString(); 
                row[3] = order.getStatus();
                row[4] = order.getMessage(); 
                model.addRow(row);
            }
        }
       
    }
    private void btnManageOrder1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageOrder1ActionPerformed
        // TODO add your handling code here:
        OrderFromFoodSupplierJPanel mojp = new OrderFromFoodSupplierJPanel(userProcessContainer, enterprise, userAccount); 
        userProcessContainer.add("ManageUserAccountJPanel",  mojp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnManageOrder1ActionPerformed

    private void cmbSelection1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSelection1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cmbSelection1ActionPerformed

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed
        String status = String.valueOf(cmbSelection1.getSelectedItem());
        DefaultTableModel model = (DefaultTableModel) TblOrderHistory.getModel();
        model.setRowCount(0);
        for(WorkRequest workRequest : userAccount.getWorkQueue().getWorkRequestList()){
            if(workRequest instanceof FoodOrder && workRequest.getStatus().equals(status)){
                Object[] row = new Object[5];
                FoodOrder order = (FoodOrder) workRequest;
                row[0] = order;
                row[1] = order.getFoodSupplierOrganization().getName();
                row[2] = order.getRequestDate().toString();
                row[3] = order.getStatus();
                row[4] = order.getMessage();
                model.addRow(row);
            }
        }
    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TblOrderHistory;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnManageOrder1;
    private javax.swing.JComboBox<String> cmbSelection1;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
